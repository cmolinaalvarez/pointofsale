2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 15:03:25 | INFO | sqlalchemy.engine.Engine | [generated in 0.00233s] ('system@example.com',)
2025-09-03 15:03:25 | WARNING | passlib.handlers.bcrypt | (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-09-03 15:03:26 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | [generated in 0.00355s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT payment_terms.id AS id, payment_terms.code AS code, payment_terms.name AS name, payment_terms.description AS description, payment_terms.net_days AS net_days, payment_terms.discount_percent AS discount_percent, payment_terms.discount_days AS discount_days, payment_terms.basis AS basis, payment_terms.active AS active, payment_terms.user_id AS user_id, payment_terms.created_at AS created_at, payment_terms.updated_at AS updated_at 
FROM payment_terms) AS anon_1
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | [generated in 0.00862s] ()
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | SELECT payment_terms.id, payment_terms.code, payment_terms.name, payment_terms.description, payment_terms.net_days, payment_terms.discount_percent, payment_terms.discount_days, payment_terms.basis, payment_terms.active, payment_terms.user_id, payment_terms.created_at, payment_terms.updated_at 
FROM payment_terms ORDER BY payment_terms.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | [generated in 0.00259s] (100, 0)
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | [generated in 0.00355s] ('audit_level',)
2025-09-03 15:03:35 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 17:31:59 | INFO | sqlalchemy.engine.Engine | [generated in 0.00309s] ('system@example.com',)
2025-09-03 17:31:59 | WARNING | passlib.handlers.bcrypt | (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-09-03 17:32:00 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | [generated in 0.00222s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT payment_terms.id AS id, payment_terms.code AS code, payment_terms.name AS name, payment_terms.description AS description, payment_terms.net_days AS net_days, payment_terms.discount_percent AS discount_percent, payment_terms.discount_days AS discount_days, payment_terms.basis AS basis, payment_terms.active AS active, payment_terms.user_id AS user_id, payment_terms.created_at AS created_at, payment_terms.updated_at AS updated_at 
FROM payment_terms) AS anon_1
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | [generated in 0.00453s] ()
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | SELECT payment_terms.id, payment_terms.code, payment_terms.name, payment_terms.description, payment_terms.net_days, payment_terms.discount_percent, payment_terms.discount_days, payment_terms.basis, payment_terms.active, payment_terms.user_id, payment_terms.created_at, payment_terms.updated_at 
FROM payment_terms ORDER BY payment_terms.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | [generated in 0.02214s] (100, 0)
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | [generated in 0.02400s] ('audit_level',)
2025-09-03 17:32:11 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 19:06:47 | INFO | sqlalchemy.engine.Engine | [generated in 0.00292s] ('system@example.com',)
2025-09-03 19:06:47 | WARNING | passlib.handlers.bcrypt | (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-09-03 19:06:48 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 19:10:48 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | [generated in 0.00236s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT brands.id AS id, brands.code AS code, brands.name AS name, brands.description AS description, brands.active AS active, brands.user_id AS user_id, brands.created_at AS created_at, brands.updated_at AS updated_at 
FROM brands) AS anon_1
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | [generated in 0.00471s] ()
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | SELECT brands.id, brands.code, brands.name, brands.description, brands.active, brands.user_id, brands.created_at, brands.updated_at 
FROM brands ORDER BY brands.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | [generated in 0.00377s] (5, 0)
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | [generated in 0.00723s] ('audit_level',)
2025-09-03 19:10:49 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 20:28:07 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 20:28:08 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 20:28:08 | INFO | sqlalchemy.engine.Engine | [generated in 0.00210s] ('system@example.com',)
2025-09-03 20:28:08 | WARNING | passlib.handlers.bcrypt | (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-09-03 20:28:08 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:27:14 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:27:14 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 21:27:14 | INFO | sqlalchemy.engine.Engine | [cached since 3547s ago] ('system@example.com',)
2025-09-03 21:27:15 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:27:43 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:27:43 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:27:43 | INFO | sqlalchemy.engine.Engine | [generated in 0.00581s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:27:43 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:28:04 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:28:04 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:28:04 | INFO | sqlalchemy.engine.Engine | [cached since 20.92s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:28:04 | INFO | sqlalchemy.engine.Engine | INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at
2025-09-03 21:28:04 | INFO | sqlalchemy.engine.Engine | [generated in 0.00154s] (UUID('ec330e4d-dff0-4ac5-8e15-148264228b5c'), 'HANA4', 'Hanna4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))
2025-09-03 21:28:04 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:28:04 | ERROR | app.crud.brand | Error al crear la marca
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 545, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 267, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
        lambda protocol: protocol.bind_execute(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            self._state, args, '', limit, True, timeout))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 256, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\crud\brand.py", line 32, in create_brand
    await db.flush()
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 801, in flush
    await greenlet_spawn(self.sync_session.flush, objects=objects)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('ec330e4d-dff0-4ac5-8e15-148264228b5c'), 'HANA4', 'Hanna4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-03 21:28:04 | ERROR | app.routers.brand | Error de integridad al crear marca: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('ec330e4d-dff0-4ac5-8e15-148264228b5c'), 'HANA4', 'Hanna4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 545, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 267, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
        lambda protocol: protocol.bind_execute(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            self._state, args, '', limit, True, timeout))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 256, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\routers\brand.py", line 37, in create_brand_endpoint
    new_brand, log = await create_brand(db, brand_in, current_user.id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\crud\brand.py", line 32, in create_brand
    await db.flush()
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 801, in flush
    await greenlet_spawn(self.sync_session.flush, objects=objects)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(Hanna4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('ec330e4d-dff0-4ac5-8e15-148264228b5c'), 'HANA4', 'Hanna4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | [cached since 44.91s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | [cached since 23.99s ago] (UUID('c45dec1a-0874-450b-baac-f7c4de6df108'), 'HANA4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | [generated in 0.01308s] ('audit_level',)
2025-09-03 21:28:28 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 21:28:28 | INFO | app.routers.brand | Marca creada exitosamente: c45dec1a-0874-450b-baac-f7c4de6df108 - HANNA4 por usuario a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac
2025-09-03 21:28:54 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:28:54 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:28:54 | INFO | sqlalchemy.engine.Engine | [cached since 71.32s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:28:54 | INFO | sqlalchemy.engine.Engine | INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at
2025-09-03 21:28:54 | INFO | sqlalchemy.engine.Engine | [cached since 50.41s ago] (UUID('783e0d2f-9d92-43d1-a165-355e2f68a371'), 'HANA4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))
2025-09-03 21:28:54 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:28:54 | ERROR | app.crud.brand | Error al crear la marca
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 545, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 267, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
        lambda protocol: protocol.bind_execute(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            self._state, args, '', limit, True, timeout))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 256, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\crud\brand.py", line 32, in create_brand
    await db.flush()
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 801, in flush
    await greenlet_spawn(self.sync_session.flush, objects=objects)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('783e0d2f-9d92-43d1-a165-355e2f68a371'), 'HANA4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-03 21:28:54 | ERROR | app.routers.brand | Error de integridad al crear marca: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('783e0d2f-9d92-43d1-a165-355e2f68a371'), 'HANA4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 545, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 267, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
        lambda protocol: protocol.bind_execute(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            self._state, args, '', limit, True, timeout))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 256, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\routers\brand.py", line 37, in create_brand_endpoint
    new_brand, log = await create_brand(db, brand_in, current_user.id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\crud\brand.py", line 32, in create_brand
    await db.flush()
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 801, in flush
    await greenlet_spawn(self.sync_session.flush, objects=objects)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('783e0d2f-9d92-43d1-a165-355e2f68a371'), 'HANA4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-03 21:29:05 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:29:05 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:29:05 | INFO | sqlalchemy.engine.Engine | [cached since 82.42s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:29:05 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:29:18 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:29:18 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:29:18 | INFO | sqlalchemy.engine.Engine | [cached since 95.34s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:29:18 | INFO | sqlalchemy.engine.Engine | INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at
2025-09-03 21:29:18 | INFO | sqlalchemy.engine.Engine | [cached since 74.43s ago] (UUID('ea4aea5e-f792-4890-9c05-c4be1fae44ad'), 'HAN-4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))
2025-09-03 21:29:18 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 21:29:18 | ERROR | app.crud.brand | Error al crear la marca
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 545, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 267, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
        lambda protocol: protocol.bind_execute(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            self._state, args, '', limit, True, timeout))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 256, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\crud\brand.py", line 32, in create_brand
    await db.flush()
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 801, in flush
    await greenlet_spawn(self.sync_session.flush, objects=objects)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('ea4aea5e-f792-4890-9c05-c4be1fae44ad'), 'HAN-4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-03 21:29:18 | ERROR | app.routers.brand | Error de integridad al crear marca: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('ea4aea5e-f792-4890-9c05-c4be1fae44ad'), 'HAN-4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 545, in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 176, in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 267, in __bind_execute
    data, status, _ = await self.__do_execute(
                      ^^^^^^^^^^^^^^^^^^^^^^^^
        lambda protocol: protocol.bind_execute(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            self._state, args, '', limit, True, timeout))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\asyncpg\prepared_stmt.py", line 256, in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "asyncpg\\protocol\\protocol.pyx", line 206, in bind_execute
asyncpg.exceptions.UniqueViolationError: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.IntegrityError: <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\routers\brand.py", line 37, in create_brand_endpoint
    new_brand, log = await create_brand(db, brand_in, current_user.id)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Desarrollo\IA\Projects\4_Ventas\backend\app\crud\brand.py", line 32, in create_brand
    await db.flush()
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 801, in flush
    await greenlet_spawn(self.sync_session.flush, objects=objects)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 580, in execute
    self._adapt_connection.await_(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._prepare_and_execute(operation, parameters)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 558, in _prepare_and_execute
    self._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 508, in _handle_exception
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py", line 792, in _handle_exception
    raise translated_error from error
sqlalchemy.exc.IntegrityError: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: llave duplicada viola restricción de unicidad «brands_name_key»
DETAIL:  Ya existe la llave (name)=(HANNA4).
[SQL: INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at]
[parameters: (UUID('ea4aea5e-f792-4890-9c05-c4be1fae44ad'), 'HAN-4', 'HANNA4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | [cached since 107.1s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | INSERT INTO brands (id, code, name, description, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::BOOLEAN, $6::UUID) RETURNING brands.created_at, brands.updated_at
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | [cached since 86.21s ago] (UUID('bf18d4f0-ce36-463f-b559-2ddc5f405cbf'), 'HAN-4', 'HANN-4', 'Descripción 1', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | [cached since 62.22s ago] ('audit_level',)
2025-09-03 21:29:30 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 21:29:30 | INFO | app.routers.brand | Marca creada exitosamente: bf18d4f0-ce36-463f-b559-2ddc5f405cbf - HANN-4 por usuario a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 22:23:17 | INFO | sqlalchemy.engine.Engine | [generated in 0.00094s] ('system@example.com',)
2025-09-03 22:23:17 | WARNING | passlib.handlers.bcrypt | (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-09-03 22:23:18 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 22:31:02 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 22:31:02 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:31:03 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 22:31:03 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:31:03 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 22:31:03 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:31:03 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:31:04 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:31:04 | INFO | sqlalchemy.engine.Engine | [generated in 0.32946s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:31:04 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT brands.id AS id, brands.code AS code, brands.name AS name, brands.description AS description, brands.active AS active, brands.user_id AS user_id, brands.created_at AS created_at, brands.updated_at AS updated_at 
FROM brands) AS anon_1
2025-09-03 22:31:05 | INFO | sqlalchemy.engine.Engine | [generated in 0.22077s] ()
2025-09-03 22:31:05 | INFO | sqlalchemy.engine.Engine | SELECT brands.id, brands.code, brands.name, brands.description, brands.active, brands.user_id, brands.created_at, brands.updated_at 
FROM brands ORDER BY brands.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 22:31:05 | INFO | sqlalchemy.engine.Engine | [generated in 0.04706s] (5, 0)
2025-09-03 22:31:05 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 22:31:05 | INFO | sqlalchemy.engine.Engine | [generated in 0.13097s] ('audit_level',)
2025-09-03 22:31:05 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 22:31:16 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | [cached since 12.77s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT brands.id AS id, brands.code AS code, brands.name AS name, brands.description AS description, brands.active AS active, brands.user_id AS user_id, brands.created_at AS created_at, brands.updated_at AS updated_at 
FROM brands) AS anon_1
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | [cached since 12.15s ago] ()
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | SELECT brands.id, brands.code, brands.name, brands.description, brands.active, brands.user_id, brands.created_at, brands.updated_at 
FROM brands ORDER BY brands.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | [generated in 0.02247s] (5, 0)
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | [cached since 11.59s ago] ('audit_level',)
2025-09-03 22:31:17 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | [cached since 50.02s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT brands.id AS id, brands.code AS code, brands.name AS name, brands.description AS description, brands.active AS active, brands.user_id AS user_id, brands.created_at AS created_at, brands.updated_at AS updated_at 
FROM brands) AS anon_1
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | [cached since 49.35s ago] ()
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | SELECT brands.id, brands.code, brands.name, brands.description, brands.active, brands.user_id, brands.created_at, brands.updated_at 
FROM brands ORDER BY brands.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | [cached since 37.23s ago] (5, 0)
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | [cached since 48.78s ago] ('audit_level',)
2025-09-03 22:31:54 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | [cached since 57.96s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT brands.id AS id, brands.code AS code, brands.name AS name, brands.description AS description, brands.active AS active, brands.user_id AS user_id, brands.created_at AS created_at, brands.updated_at AS updated_at 
FROM brands) AS anon_1
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | [cached since 57.32s ago] ()
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | SELECT brands.id, brands.code, brands.name, brands.description, brands.active, brands.user_id, brands.created_at, brands.updated_at 
FROM brands ORDER BY brands.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | [cached since 45.2s ago] (5, 0)
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | [cached since 56.77s ago] ('audit_level',)
2025-09-03 22:32:02 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.email = $1::VARCHAR
2025-09-03 22:36:50 | INFO | sqlalchemy.engine.Engine | [generated in 0.00097s] ('system@example.com',)
2025-09-03 22:36:50 | WARNING | passlib.handlers.bcrypt | (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "C:\Users\HP\AppData\Local\Programs\Python\Python313\Lib\site-packages\passlib\handlers\bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-09-03 22:36:51 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | [generated in 0.00251s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | SELECT count(*) AS count_1 
FROM (SELECT brands.id AS id, brands.code AS code, brands.name AS name, brands.description AS description, brands.active AS active, brands.user_id AS user_id, brands.created_at AS created_at, brands.updated_at AS updated_at 
FROM brands) AS anon_1
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | [generated in 0.00156s] ()
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | SELECT brands.id, brands.code, brands.name, brands.description, brands.active, brands.user_id, brands.created_at, brands.updated_at 
FROM brands ORDER BY brands.name 
 LIMIT $1::INTEGER OFFSET $2::INTEGER
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | [generated in 0.00449s] (5, 0)
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | [generated in 0.00809s] ('audit_level',)
2025-09-03 22:37:03 | INFO | sqlalchemy.engine.Engine | COMMIT
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | select pg_catalog.version()
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | select current_schema()
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | show standard_conforming_strings
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | [raw sql] ()
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | [generated in 0.00117s] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | SELECT payment_terms.id, payment_terms.code, payment_terms.name, payment_terms.description, payment_terms.net_days, payment_terms.discount_percent, payment_terms.discount_days, payment_terms.basis, payment_terms.active, payment_terms.user_id, payment_terms.created_at, payment_terms.updated_at 
FROM payment_terms 
WHERE payment_terms.code = $1::VARCHAR
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | [generated in 0.00493s] ('EN305',)
2025-09-03 22:48:25 | INFO | sqlalchemy.engine.Engine | ROLLBACK
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | BEGIN (implicit)
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | SELECT users.id, users.username, users.email, users.full_name, users.password, users.active, users.superuser, users.role_id, users.user_id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::UUID
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | [cached since 6.267s ago] ('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac',)
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | SELECT payment_terms.id, payment_terms.code, payment_terms.name, payment_terms.description, payment_terms.net_days, payment_terms.discount_percent, payment_terms.discount_days, payment_terms.basis, payment_terms.active, payment_terms.user_id, payment_terms.created_at, payment_terms.updated_at 
FROM payment_terms 
WHERE payment_terms.code = $1::VARCHAR
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | [cached since 6.273s ago] ('EN307',)
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | INSERT INTO payment_terms (id, code, name, description, net_days, discount_percent, discount_days, basis, active, user_id) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::INTEGER, $6::FLOAT, $7::INTEGER, $8::VARCHAR, $9::BOOLEAN, $10::UUID) RETURNING payment_terms.created_at, payment_terms.updated_at
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | [generated in 0.00189s] (UUID('3ceb7c69-2f60-487e-91d5-c23313e50d0e'), 'EN307', 'Fin de mes + 302', '', 30, 0.0, 0, 'Factura', True, UUID('a9dda6b3-46e9-4c6e-a314-ab3b7cad74ac'))
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | SELECT settings.value 
FROM settings 
WHERE settings.key = $1::VARCHAR AND settings.active = true
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | [generated in 0.00251s] ('audit_level',)
2025-09-03 22:48:32 | INFO | sqlalchemy.engine.Engine | COMMIT
