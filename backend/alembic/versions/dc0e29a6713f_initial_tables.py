"""Initial tables

Revision ID: dc0e29a6713f
Revises: 1e190bc05800
Create Date: 2025-09-02 11:17:25.884017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dc0e29a6713f'
down_revision: Union[str, Sequence[str], None] = '1e190bc05800'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('payment_terms', sa.Column('net_days', sa.Integer(), nullable=False))
    op.add_column('payment_terms', sa.Column('discount_percent', sa.Float(), nullable=False))
    op.add_column('payment_terms', sa.Column('discount_days', sa.Integer(), nullable=False))
    op.add_column('payment_terms', sa.Column('basis', sa.String(length=20), nullable=False))
    op.alter_column('payment_terms', 'code',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=10),
               existing_nullable=False)
    op.alter_column('payment_terms', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_constraint(op.f('uq_payment_terms_code'), 'payment_terms', type_='unique')
    op.drop_constraint(op.f('uq_payment_terms_name'), 'payment_terms', type_='unique')
    op.drop_column('payment_terms', 'days')
    op.create_foreign_key('fk_users_user_id_users', 'users', 'users', ['user_id'], ['id'], use_alter=True)
    op.create_foreign_key('fk_users_role_id_roles', 'users', 'roles', ['role_id'], ['id'], use_alter=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_users_role_id_roles', 'users', type_='foreignkey')
    op.drop_constraint('fk_users_user_id_users', 'users', type_='foreignkey')
    op.add_column('payment_terms', sa.Column('days', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('uq_payment_terms_name'), 'payment_terms', ['name'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('uq_payment_terms_code'), 'payment_terms', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('payment_terms', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('payment_terms', 'code',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.drop_column('payment_terms', 'basis')
    op.drop_column('payment_terms', 'discount_days')
    op.drop_column('payment_terms', 'discount_percent')
    op.drop_column('payment_terms', 'net_days')
    # ### end Alembic commands ###
